apiVersion: apps/v1
kind: Deployment
metadata:
  name: filterservice-deployment
  labels:
    app: filterservice
  {{- include "webapp-chart.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.filterserviceDeployment.replicas }}
  selector:
    matchLabels:
      app: filterservice
    {{- include "webapp-chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: filterservice
      {{- include "webapp-chart.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - env:
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ .Values.kubernetesClusterDomain }}
        image: docker.io/dockercgs/filter-service:latest
          #imagePullPolicy: Always
        name: filterservice
        ports:
        - containerPort: 8005
          name: http
        resources: {}
      imagePullSecrets:
      - name: dockersecret
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gowebapi-deployment
  labels:
    app: gowebapi
  {{- include "webapp-chart.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.gowebapiDeployment.replicas }}
  selector:
    matchLabels:
      app: gowebapi
    {{- include "webapp-chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: gowebapi
      {{- include "webapp-chart.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - env:
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ .Values.kubernetesClusterDomain }}
        envFrom:
        - configMapRef:
            name: postgres-config
        - configMapRef:
            name: gowebapi-config
        - secretRef:
            name: postgres-secret
        - secretRef:
            name: aws-secret
        - secretRef:
            name: google-secret
        image: docker.io/dockercgs/goweb-api:latest
          #imagePullPolicy: Always
        name: gowebapi
        ports:
        - containerPort: 8000
          name: http
        resources: {}
      restartPolicy: Always
      imagePullSecrets:
      - name: dockersecret

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: livetail-deployment
  labels:
    app: livetail
  {{- include "webapp-chart.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.livetailDeployment.replicas }}
  selector:
    matchLabels:
      app: livetail
    {{- include "webapp-chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: livetail
      {{- include "webapp-chart.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - env:
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ .Values.kubernetesClusterDomain }}
        image: docker.io/dockercgs/livetail:latest
          #imagePullPolicy: Always
        name: livetail
        ports:
        - containerPort: 4000
          name: http
        resources: {}
      imagePullSecrets:
      - name: dockersecret
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: notification-deployment
  labels:
    app: notification
  {{- include "webapp-chart.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.notificationDeployment.replicas }}
  selector:
    matchLabels:
      app: notification
    {{- include "webapp-chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: notification
      {{- include "webapp-chart.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - env:
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ .Values.kubernetesClusterDomain }}
        envFrom:
        - configMapRef:
            name: gowebapi-config
        - secretRef:
            name: aws-secret
        - secretRef:
            name: google-secret
        - secretRef:
            name: mailgun-secret
        image: docker.io/dockercgs/notification:latest
          #imagePullPolicy: Always
        name: notification
        ports:
        - containerPort: 6002
          name: http
        resources: {}
      imagePullSecrets:
      - name: dockersecret
