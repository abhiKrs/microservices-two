# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19

      - name: Build
        run: go build -v ./...

      - name: Test
        run: go test -v ./...

      - name: Build and Push Docker logfire/gowebapi:latest gowebapp/web-api
        uses: abhiKrs/docker-build-push@v4
        with:
          image: logfire/gowebapi
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        working-directory: gowebapp/web-api

      - name: Build and Push Docker logfire/filter-sergowebapp/notificationvice:latest gowebapp/filter-service
        uses: abhiKrs/docker-build-push@v4
        with:
          image: logfire/filter-service
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        working-directory: flink-filter-service/go-filter-service      


      - name: Build and Push Docker logfire/livetail:latest gowebapp/livetail
        uses: abhiKrs/docker-build-push@v4
        with:
          image: logfire/livetail
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        working-directory: gowebapp/livetail

      - name: Build and Push Docker logfire/notification:latest gowebapp/notification
        uses: abhiKrs/docker-build-push@v4
        with:
          image: logfire/notification
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        working-directory: gowebapp/notification

      - name: Setup SSH authentication
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock


















# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19
      env:
        SSH_AUTH_SOCK: /tmp/ssh_agent.sock

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...

    - name: Build and Push Docker logfire/gowebapi:latest
      uses: docker/build-push-action@v2
      with:
        context: gowebapp/web-api
        push: true
        tags: logfire/gowebapi:latest
        registry: docker.io
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and Push Docker logfire/filter-service:latest
      uses: docker/build-push-action@v2
      with:
        context: flink-filter-service/go-filter-service
        push: true
        tags: logfire/filter-service:latest
        registry: docker.io
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and Push Docker logfire/livetail:latest
      uses: docker/build-push-action@v2
      with:
        context: gowebapp/livetail
        push: true
        tags: logfire/livetail:latest
        registry: docker.io
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and Push Docker logfire/notification:latest
      uses: docker/build-push-action@v2
      with:
        context: gowebapp/notification
        push: true
        tags: logfire/notification:latest
        registry: docker.io
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

    - name: Setup SSH authentication
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
      env:
        SSH_AUTH_SOCK: /tmp/ssh_agent.sock














# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19

      - name: Build
        run: go build -v ./...

      - name: Test
        run: go test -v ./...

      - name: Build and Push Docker logfire/gowebapi:latest gowebapp/web-api
        uses: abhiKrs/docker-build-push@v4
        with:
          image: logfire/gowebapi
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        working-directory: gowebapp/web-api

      - name: Build and Push Docker logfire/filter-sergowebapp/notificationvice:latest gowebapp/filter-service
        uses: abhiKrs/docker-build-push@v4
        with:
          image: logfire/filter-service
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        working-directory: flink-filter-service/go-filter-service      


      - name: Build and Push Docker logfire/livetail:latest gowebapp/livetail
        uses: abhiKrs/docker-build-push@v4
        with:
          image: logfire/livetail
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        working-directory: gowebapp/livetail

      - name: Build and Push Docker logfire/notification:latest gowebapp/notification
        uses: abhiKrs/docker-build-push@v4
        with:
          image: logfire/notification
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        working-directory: gowebapp/notification
        
      - name: Setup SSH authentication
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock



###############latest#####go test #####

# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19
      env:
        SSH_AUTH_SOCK: /tmp/ssh_agent.sock

    - name: Build
      working-directory: gowebapp/web-api
      run: go build -v ./...

    - name: Test
      run: go test -v ./...

    - name: Build and Push Docker logfire/gowebapi:latest
      uses: docker/build-push-action@v2
      with:
        context: gowebapp/web-api
        push: true
        tags: logfire/gowebapi:latest
        registry: docker.io
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and Push Docker logfire/filter-service:latest
      uses: docker/build-push-action@v2
      with:
        context: flink-filter-service/go-filter-service
        push: true
        tags: logfire/filter-service:latest
        registry: docker.io
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and Push Docker logfire/livetail:latest
      uses: docker/build-push-action@v2
      with:
        context: gowebapp/livetail
        push: true
        tags: logfire/livetail:latest
        registry: docker.io
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and Push Docker logfire/notification:latest
      uses: docker/build-push-action@v2
      with:
        context: gowebapp/notification
        push: true
        tags: logfire/notification:latest
        registry: docker.io
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

    - name: Setup SSH authentication
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
      env:
        SSH_AUTH_SOCK: /tmp/ssh_agent.sock




############new##########

# This workflow will build and test a golang project and push Docker images
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19
      env:
        SSH_AUTH_SOCK: /tmp/ssh_agent.sock

    - name: Build
      run: go build -v ./gowebapp/web-api

    - name: Test
      run: go test -v ./gowebapp/web-api/...

    - name: Build and Push Docker logfire/gowebapi:latest
      uses: docker/build-push-action@v2
      with:
        context: gowebapp/web-api
        push: true
        tags: logfire/gowebapi:latest
        registry: docker.io
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and Push Docker logfire/filter-service:latest
      uses: docker/build-push-action@v2
      with:
        context: flink-filter-service/go-filter-service
        push: true
        tags: logfire/filter-service:latest
        registry: docker.io
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and Push Docker logfire/livetail:latest
      uses: docker/build-push-action@v2
      with:
        context: gowebapp/livetail
        push: true
        tags: logfire/livetail:latest
        registry: docker.io
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and Push Docker logfire/notification:latest
      uses: docker/build-push-action@v2
      with:
        context: gowebapp/notification
        push: true
        tags: logfire/notification:latest
        registry: docker.io
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

    - name: Setup SSH authentication
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
      env:
        SSH_AUTH_SOCK: /tmp/ssh_agent.sock
